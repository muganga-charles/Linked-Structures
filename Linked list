class Node:
    def __init__(self,data = None,next = None):
        self.data = data
        self.next = next
class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None
    def insert(self,data):
        node = Node(data,self.head)
        self.head = node
    def append(self,data):
        node = Node(data)
        if self.head == None:
            self.head = node
            self.tail = node
            return
        self.tail.next = node
        self.tail = node

    def printing(self):
        if self.head is None:
            print("List is empty")
            return
        itr = self.head
        llstr = ''
        while itr:
            llstr += str(itr.data) + ' '
            itr = itr.next
        print(llstr)
    def insert_values(self,data_list):#creates new linkedlist
        self.head = None
        for data in data_list:
            self.append(data)
    def get_length(self):
        count = 0
        itr = self.head
        while itr:
            count += 1
            itr = itr.next
        return count
    def remove(self,index):
        if index<0 or index>=self.get_length():
            raise Exception('invalid index')

        if index == 0:
            self.head = self.head.next
            return
        count = 0
        itr = self.head
        while itr:
            if count == index-1:
                itr.next = itr.next.next
                break
            itr = itr.next
            count+= 1
    def insert_at(self,data,index):#inserts element at a given index
        if index<0 or index>=self.get_length():
            raise Exception('invalid index')

        if index == 0:
            self.insert(data)
            return
        count = 0
        itr = self.head
        while itr:
            if count == index-1:
                node = Node(data,itr.next)
                itr.next = node
                break
            itr = itr.next
            count+= 1

if __name__=='__main__':
    ll = LinkedList()
    ll.append(5)
    ll.append(23)
    ll.insert_values(['banana','mango','grapes','orange'])
    ll.printing()
    ll.insert_at('jack',3)
    ll.printing()
    #print('lenth',ll.get_length())
